---
title: "Class 14: RNAseq Mini-Project"
author: "Zoe Matsunaga (PID: A16853288)"
format: pdf
toc: true
---

The data for for hands-on session comes from GEO entry: GSE37704, which is associated with the following publication:

Trapnell C, Hendrickson DG, Sauvageau M, Goff L et al. "Differential analysis of gene regulation at transcript resolution with RNA-seq". Nat Biotechnol 2013 Jan;31(1):46-53. PMID: 23222703

The authors report on differential analysis of lung fibroblasts in response to loss of the developmental transcription factor HOXA1. Their results and others indicate that HOXA1 is required for lung fibroblast and HeLa cell cycle progression. In particular their analysis show that "loss of HOXA1 results in significant expression level changes in thousands of individual transcripts, along with isoform switching events in key regulators of the cell cycle". 

For our session we have used their Sailfish gene-level estimated counts and hence are restricted to protein-coding genes only.

```{r, message=FALSE}
library(DESeq2)
library(AnnotationDbi)
library(org.Hs.eg.db)
library(pathview)
library(gage)
library(gageData)
```

# Data Import

```{r}
colData <- read.csv("GSE37704_metadata.csv", row.names=1)
countData <- read.csv("GSE37704_featurecounts.csv", row.names=1)

head(colData)

head(countData)
```

# Tidying up Data

Check the corespondance of colData rows and countData columns.

```{r}
rownames(colData)
```

```{r}
colnames(countData)
```

```{r}
counts <- colData[,-1]
```


```{r}
rownames(colData) == colnames(counts)
```

Remove the troublesome

```{r}
counts <- countData[,-1]
```

```{r}
head(counts)
```

```{r}
all (rownames(colData) == colnames(counts))
```

# Remove zero count genes

We will have rows in `counts` for genes that we can not say anything about because they have zero expression in the particular tissue we are looking at. 

```{r}
head(counts)
```

If the `rowSums()` is zero then a given gene (i.e. row) has no count data and we should exclude these genes from further consideration. 

```{r}
to.keep <- rowSums(counts) != 0
cleancounts <- counts[to.keep, ]
```

> Q. How many genes do we have left? 

```{r}
nrow(cleancounts)
```

# Setup DESeq object for analysis

```{r}
dds <- DESeqDataSetFromMatrix(countData = cleancounts,
                              colData = colData,
                              design = ~condition)
```

# Run DESeq analysis

```{r}
dds <- DESeq(dds)
```


# Extract the results

```{r}
res <- results(dds)
head(res)
```

# Add gene annotation

```{r}
columns(org.Hs.eg.db)

res$symbol = mapIds(org.Hs.eg.db,
                    keys=row.names(res), 
                    keytype="ENSEMBL",
                    column="SYMBOL",
                    multiVals="first")

res$entrez = mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")

res$name =   mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="GENENAME",
                    multiVals="first")


head(res, 10)
```

# Save my results to a CSV file

```{r}
write.csv(res, file="results.csv")
```

# Result Visualization

```{r}
mycols <- rep("gray", nrow(res))
mycols[ res$log2FoldChange <= -2 ] <- "blue"
mycols[res$log2FoldChange >= +2] <- "blue"

mycols[ res$padj >= 0.05 ] <- "gray"

plot(res$log2FoldChange, -log(res$padj), col=mycols)
abline(v=-2, col="red")
abline(v=+2, col="red")
abline(h=-log(0.05), col="red")
```

```{r}
library(ggplot2)
ggplot(as.data.frame(res)) +
         aes(log2FoldChange, -log(padj), col=) +
         geom_point(alpha=0.6, col=mycols) +
         geom_vline(xintercept = c(-2, 2), color = "red") +
         geom_hline(yintercept = -log(0.05), color = "red") +
         theme_bw()
         labs(title="Volcano Plot", x= "log2 Fold-Change", y="-log(Adjusted P-Value) ")
        
```

# Pathway Anlysis

```{r}
data(kegg.sets.hs)
data(sigmet.idx.hs)

kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

head(kegg.sets.hs, 3)
```

```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

```{r}
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```

```{r}
attributes(keggres)
```

```{r}
head(keggres$less)
```

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```

![Cell Cycle Pathway](hsa04110.pathview.png)

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native=FALSE)
```

```{r}
keggrespathways <- rownames(keggres$greater)[1:5]

keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```

```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```

![Hematopoietic Cell Lineage](hsa04640.pathview.png)

![Lysosome Pathway](hsa04142.pathview.png)

![Notch Signaling Pathway](hsa04330.pathview.png)

![JAK-STAT Signaling Pathway](hsa04630.pathview.png)

![Steroid Hormone Biosynthesis](hsa00140.pathview.png)


# Gene Ontology (GO) genesets

```{r}
data(go.sets.hs)
data(go.subs.hs)

gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres,head)

head(gobpres$less, 5)
```

# Reactome Analysis Online

We need to make an over-representation enrichment analysis and pathway-topology analysis with Reactome using the previous list of significant genes generated from our differential expression results above.

```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
sig_genes[6]
```

```{r}
write.table(sig_genes, file="significant_genes.txt", 
            row.names=FALSE, 
            col.names=FALSE, 
            quote=FALSE)
```

Then, to perform pathway analysis online go to the Reactome website (https://reactome.org/PathwayBrowser/#TOOL=AT). Select “choose file” to upload your significant gene list. Then, select the parameters “Project to Humans”, then click “Analyze”.

![R-HSA-69620](R-HSA-69620.png)

