---
title: "Class 17: Analyzing Sequencing Data in the Cloud"
author: "Zoe Matsunaga (PID: A16853288)"
format: pdf
toc: true
---

# Downstream Analysis

```{r}
library(tximport)

folders <- dir(pattern="SRR21568*")
samples <- sub("_quant", "", folders)
files <- file.path(folders, "abundance.h5" )
names(files) <- samples

txi.kallisto <- tximport(files, type = "kallisto", txOut = TRUE)

```

```{r}
head(txi.kallisto$counts)
```

```{r}
colSums(txi.kallisto$counts)
```

```{r}
sum(rowSums(txi.kallisto$counts)>0)
```

```{r}
to.keep <- rowSums(txi.kallisto$counts) > 0
kset.nonzero <- txi.kallisto$counts[to.keep,]
```

```{r}
keep2 <- apply(kset.nonzero,1,sd)>0
x <- kset.nonzero[keep2,]
```

# PCA 

```{r}
pca <- prcomp(t(x), scale=TRUE)
```

```{r}
summary(pca)
```

## PC1 vs PC2 in base R

```{r}
plot(pca$x[,1], pca$x[,2],
     col=c("blue","blue","red","red"),
     xlab="PC1", ylab="PC2", pch=16)
```

## PCA Plots using ggplot2

```{r}
pca.df <- data.frame(
  sample = c("SRR2156848", "SRR2156849", "SRR2156850", "SRR2156851"),
  PC1 = pca$x[,1],
  PC2 = pca$x[,2],
  PC3 = pca$x[,3],
  condition = c("control", "control", "treatment", "treatment")
)
```

### PC1 vs PC2 

```{r}
library(ggplot2)
ggplot(pca.df, aes(PC1, PC2, color = condition, label = sample)) +
  geom_point() +
  ggrepel::geom_text_repel() +
  labs(x = "PC1", y = "PC2") +
  theme_minimal()
```

### PC1 vs PC3

```{r}
ggplot(pca.df, aes(PC1, PC3, color = condition, label = sample)) +
  geom_point() +
  ggrepel::geom_text_repel() +
  labs(x = "PC1", y = "PC3") +
  theme_minimal()
```

### PC2 vs PC3

```{r}
ggplot(pca.df, aes(PC2, PC3, color = condition, label = sample)) +
  geom_point() +
  ggrepel::geom_text_repel() +
  labs(x = "PC2", y = "PC3") +
  theme_minimal()
```

# Differential Expression Analysis

```{r, message=FALSE}
library(DESeq2)
```

```{r}
sampleTable <- data.frame(condition = factor(rep(c("control", "treatment"), each = 2)))
rownames(sampleTable) <- colnames(txi.kallisto$counts)
```

```{r}
dds <- DESeqDataSetFromTximport(txi.kallisto,
                                sampleTable, 
                                ~condition)
```

```{r}
dds <- DESeq(dds)

res <- results(dds)
head(res)
```

